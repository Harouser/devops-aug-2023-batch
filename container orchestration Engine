Container Engine --> To create containers and to deploy microservices

Container Orchestration Engine --> Kubernetes

1. Auto-scaling of containers as per the incoming traffic
2. Auto Load-Balancing of requests across all the containers
3. Auto-deployment of containers WITHOUT DOWNTIME including rollbacks
4. Auto-Clustering
5. Auto-Scheduling
6. Auto-healing of containers 

Kubernetes --> Google has donated kubernetes to CNCF

  AWS --> EKS
  Azure --> AKS
  GCP  --> GKE
  Oracle --> OKE

Kubernetes Objects --> Resources that are created in the kubernetes cluster
1. Pods --> Encapsulation (wrapper) around a container --> To deploy microservices
2. Replica Set --> To maintain a stable number of replica pods
3. Deployment --> to deploy the replicaset / maintain the history of all the deployments / rollback
4. Services --> To expose the pods --> NodePort (expose front-end pods), ClusterIP (communication between FP and BP), LoadBalancer


Kubernetes Architecture:
Master Node:
API Server --> Gatekeeper
Scheduler --> schedule the pods on nodes
Control Manager --> Overall health of the cluster --> nodes / pods
ETCD --> key-value, lightweight, distributed central database --> single source of truth for the cluster


Worker Nodes:
Kubelet --> Ensures containers/pods are running healthy
kube-proxy --> core networking component if the cluster
Pods --> basic scheduling unit --> Encapsulation (wrapper) around a container --> To deploy microservices
containers --> deploy microservices


3 CLIs
aws cli   --> aws --version
kubectl --> kubectl version
eksctl --> eksctl version --> https://github.com/eksctl-io/eksctl/blob/main/README.md#installation


